services:
  app:
    build: .
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-signage_user}:${POSTGRES_PASSWORD:-signage_pass}@db:5432/${POSTGRES_DB:-signage_db}
      - SESSION_SECRET=${SESSION_SECRET:-default_session_secret_change_in_production}
      - FLASK_ENV=production
      - UPLOAD_FOLDER=/app/uploads
      - MAX_CONTENT_LENGTH=104857600
      # Admin user variables (will be read from .env)
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@signage.local}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-signage_db}
      - POSTGRES_USER=${POSTGRES_USER:-signage_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-signage_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-signage_user} -d ${POSTGRES_DB:-signage_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  uploads_data:
  logs_data: